// Code generated by 'ddd-gen app command': THESE ARE STUBS, PLEASE EDIT.

package command

import (
	"context"
	gouuid "github.com/satori/go.uuid"
	policy "github.com/xoe-labs/ddd-gen/internal/test-svc/app/policy"
	repository "github.com/xoe-labs/ddd-gen/internal/test-svc/app/repository"
	account "github.com/xoe-labs/ddd-gen/internal/test-svc/domain/account"
)

/*
	=== Topic: Account ===
*/

// MakeNewAccount represents a MakeNewAccount command
type MakeNewAccount struct {
	uuid           gouuid.UUID
	userId         string
	elevationToken string

	// TODO: design command event/message fields (evtl. use protobuf + protoc-gen-go)
}

// handle specifically performs MakeNewAccount
func (mna *MakeNewAccount) handle(ctx context.Context, a *account.Account) error {
	// TODO: implement app logic
	return nil
}

/*
	=> Identifiable interface implementation ...
*/

// Identifier returns the identifier of the object on which to perform MakeNewAccount
func (mna MakeNewAccount) Identifier() gouuid.UUID {
	return mna.uuid
}

// Assert that MakeNewAccount implements Identifiable interface!
var _ repository.Identifiable = (*MakeNewAccount)(nil)

/*
	=> Policeable interface implementation ...
*/

// User returns the identifier of the caller
func (mna MakeNewAccount) User() string {
	return mna.userId
}

// ElevationToken returns an elevation token in posession of the caller
func (mna MakeNewAccount) ElevationToken() string {
	return mna.elevationToken
}

// Assert that MakeNewAccount implements Policeable interface!
var _ policy.Policeable = (*MakeNewAccount)(nil)
